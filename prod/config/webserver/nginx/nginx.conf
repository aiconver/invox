

# Enables the use of JIT for regular expressions to speed-up their processing.
pcre_jit on;    

# Includes files with directives to load dynamic modules.
include /etc/nginx/modules/*.conf;

events {
    # The maximum number of simultaneous connections that can be opened by
    # a worker process.
    worker_connections 1024;
}

http {
	# resolver 127.0.0.11 valid=30s;
	include /etc/nginx/conf.d/*.conf;

	# Includes mapping of file name extensions to MIME types of responses
	# and defines the default type.
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	# Don't tell nginx version to the clients. Default is 'on'.
	server_tokens off;

	# Specifies the maximum accepted body size of a client request, as
	# indicated by the request header Content-Length. If the stated content
	# length is greater than this size, then the client receives the HTTP
	# error code 413. Set to 0 to disable. Default is '1m'.
	client_max_body_size 50m;

	# Sendfile copies data between one FD and other from within the kernel,
	# which is more efficient than read() + write(). Default is off.
	sendfile on;

	# Causes nginx to attempt to send its HTTP response head in one packet,
	# instead of using partial frames. Default is 'off'.
	tcp_nopush on;

	# all ssl related config moved to ssl.conf
	# included in server blocks where listen 443 is defined

	# Enable gzipping of responses.
	#gzip on;

	# Set the Vary HTTP header as defined in the RFC 2616. Default is 'off'.
	gzip_vary on;

	#  # Helper variable for proxying websockets.
	map $http_upgrade $connection_upgrade {
		default upgrade;
		'' close;
	}
		map $http_x_forwarded_proto $proxy_x_forwarded_proto {
	default $http_x_forwarded_proto;
	''      $scheme;
		}
		map $http_x_forwarded_port $proxy_x_forwarded_port {
	default $http_x_forwarded_port;
	''      $server_port;
		}
	map $remote_addr $proxy_forwarded_elem {
		  # IPv4 addresses can be sent as-is
		  ~^[0-9.]+$          "for=$remote_addr";

		  # IPv6 addresses need to be bracketed and quoted
		  ~^[0-9A-Fa-f:.]+$   "for=\"[$remote_addr]\"";

		  # Unix domain socket names cannot be represented in RFC 7239 syntax
		  default             "for=unknown";
	}

	map $http_forwarded $proxy_add_forwarded {
		  # If the incoming Forwarded header is syntactically valid, append to it
		  "~^(,[ \\t]*)*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*([ \\t]*,([ \\t]*([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?(;([!#$%&'*+.^_`|~0-9A-Za-z-]+=([!#$%&'*+.^_`|~0-9A-Za-z-]+|\"([\\t \\x21\\x23-\\x5B\\x5D-\\x7E\\x80-\\xFF]|\\\\[\\t \\x21-\\x7E\\x80-\\xFF])*\"))?)*)?)*$" "$http_forwarded, $proxy_forwarded_elem";

		  # Otherwise, replace it
		  default "$proxy_forwarded_elem";
	}
	
	proxy_buffering off;
	proxy_set_header Referer $http_referer;
	proxy_set_header Forwarded $proxy_add_forwarded;		   
	proxy_set_header Host $http_host;
	proxy_set_header Upgrade $http_upgrade;
	proxy_set_header Connection $connection_upgrade;
	proxy_set_header X-Real-IP $remote_addr;
	proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
	proxy_set_header X-Forwarded-Proto $proxy_x_forwarded_proto; 
	proxy_set_header X-Forwarded-Port $proxy_x_forwarded_port;

	# redirect all traffic to https
	server {
		  listen 80 default_server;
		  listen [::]:80 default_server;
		  
		  # acme challenge location for letsencrypt verification
	    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
   		}

		  location / {
		      return 301 https://$host$request_uri;
		  }
	}
			
	server {
		listen 443 ssl;
		listen [::]:443 ssl;

		http2 on;
		server_name invox.aiconver.de;

		ssl_certificate /etc/letsencrypt/live/$server_name/fullchain.pem;
    	ssl_certificate_key /etc/letsencrypt/live/$server_name/privkey.pem;


		location /api/ {
			proxy_pass http://backend:3001;  # no extra path here
			proxy_http_version 1.1;

			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;

			client_max_body_size 50m;
			proxy_read_timeout 600s;
		}

		location / {
			root /usr/share/nginx/html;
			try_files $uri /index.html;
		}
	}
}